#lang racket

(define (main a b)

  (define (palindrome n) ;;for the purpose of the main problem returns 1<=>palindrome, 0 otherwise
    (define (reverse n)
      (define (reverseHelper n result)
        (if (positive? n)
            (reverseHelper (quotient n 10) (+ (* result 10) (remainder n 10)))
            result
        )
      )
      
      (reverseHelper n 0)
    )
    
    (if (= n (reverse n)) 1 0)
  )
  
  (define (palindromesInRange from to count)
    (if (> from to)
        count
        (palindromesInRange (+ from 1) to (+ count (palindrome from)))
    )
  )

  (palindromesInRange a b 0)
)